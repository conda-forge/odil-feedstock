From: Julien Lamy <lamy@unistra.fr>
Date: Wed Aug 20 09:30:02 2025 +0200
Subject: Fix for boost asio >= 1.87

--- a/src/odil/Association.cpp
+++ b/src/odil/Association.cpp
@@ -207,11 +207,18 @@ Association
 {
     boost::asio::ip::tcp::resolver resolver(
         this->_state_machine.get_transport().get_service());
+#if BOOST_VERSION >= 108700
+    auto const endpoint_range = resolver.resolve(this->_peer_host, "");
+#else
     boost::asio::ip::tcp::resolver::query const query(this->_peer_host, "");
     auto const endpoint_it = resolver.resolve(query);
-
+#endif
     dul::EventData data;
+#if BOOST_VERSION >= 108700
+    data.peer_endpoint = *endpoint_range.begin();
+#else
     data.peer_endpoint = *endpoint_it;
+#endif
     data.peer_endpoint.port(this->_peer_port);
 
     auto const request =
diff --git a/src/odil/dul/StateMachine.cpp b/src/odil/dul/StateMachine.cpp
index 73e24e9..a22ea2b 100644
--- a/src/odil/dul/StateMachine.cpp
+++ b/src/odil/dul/StateMachine.cpp
@@ -313,7 +313,11 @@ StateMachine
             throw Exception("TCP timer error: "+error.message());
         }
     */
+#if BOOST_VERSION >= 108700
+    this->_transport.get_service().restart();
+#else
     this->_transport.get_service().reset();
+#endif
 }
 
 AssociationAcceptor const &
diff --git a/src/odil/dul/Transport.cpp b/src/odil/dul/Transport.cpp
index dc70504..d988330 100644
--- a/src/odil/dul/Transport.cpp
+++ b/src/odil/dul/Transport.cpp
@@ -270,7 +270,11 @@ Transport
         {
             throw Exception("No operations ran");
         }
+#if BOOST_VERSION >= 108700
+        this->_service.restart();
+#else
         this->_service.reset();
+#endif
     }
 
     if(source == Source::OPERATION)
@@ -290,7 +294,11 @@ Transport
             {
                 throw Exception("No operations polled");
             }
+#if BOOST_VERSION >= 108700
+            this->_service.restart();
+#else
             this->_service.reset();
+#endif
         }
 
         if(source != Source::TIMER)
diff --git a/src/odil/dul/Transport.h b/src/odil/dul/Transport.h
index 93a6bab..6a0ef23 100644
--- a/src/odil/dul/Transport.h
+++ b/src/odil/dul/Transport.h
@@ -15,6 +15,17 @@
 #include <boost/asio.hpp>
 #include <boost/date_time.hpp>
 
+// NOTE: the io_service type alias has been removed in boost 1.87.0
+#if BOOST_VERSION >= 108700
+namespace boost
+{
+namespace asio
+{
+using io_service = io_context;
+}
+}
+#endif
+
 #include "odil/odil.h"
 
 namespace odil
--- a/tests/code/dul/Transport.cpp
+++ b/tests/code/dul/Transport.cpp
@@ -18,12 +18,22 @@ BOOST_AUTO_TEST_CASE(Connect)
     odil::dul::Transport transport;
 
     boost::asio::ip::tcp::resolver resolver(transport.get_service());
+#if BOOST_VERSION >= 108700
+    auto const endpoint_range = resolver.resolve(
+        odil::dul::Transport::Socket::protocol_type::v4(),
+        "www.example.com", "80");
+#else
     boost::asio::ip::tcp::resolver::query const query(
         odil::dul::Transport::Socket::protocol_type::v4(),
         "www.example.com", "80");
     auto const endpoint_it = resolver.resolve(query);
+#endif
 
+#if BOOST_VERSION >= 108700
+    transport.connect(*endpoint_range.begin());
+#else
     transport.connect(*endpoint_it);
+#endif
     BOOST_REQUIRE(transport.is_open());
 
     transport.write("HEAD / HTTP/1.1\r\nHost: www.example.com\r\n\r\n");
